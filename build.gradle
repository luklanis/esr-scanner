buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.3'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:18.0.+'
    compile 'org.java-websocket:Java-WebSocket:1.3.0'
    compile 'com.koushikdutta.ion:ion:1.1.5'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'org.bouncycastle:bcprov-jdk15on:1.49'

    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':thirdparty:tess-two:tess-two')
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.1.1"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 18
    }

    signingConfigs {
        debug {
            storeFile file("/home/lukas/.android/debug.keystore")
        }

        release {
            if (project.hasProperty('storeFile')) {
                storeFile file(project.storeFile)
            } else {
                storeFile System.console().readLine("\n\$ Enter keystore path: ")
            }

            if (project.hasProperty('storePassword')) {
                storePassword = project.storePassword
            } else {
                storePassword System.console().readLine("\n\$ Enter keystore password: ")
            }

            if (project.hasProperty('keyAlias')) {
                keyAlias = project.keyAlias
            } else {
                keyAlias System.console().readLine("\n\$ Enter key alias: ")
            }

            if (project.hasProperty('keyPassword')) {
                keyPassword = project.keyPassword
            } else {
                keyPassword System.console().readLine("\n\$ Enter key password: ")
            }
        }
    }

    buildTypes {
        release {
            runProguard true
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard-android.txt'
            signingConfig signingConfigs.release
        }
    }
}

task wrapper(type: org.gradle.api.tasks.wrapper.Wrapper) {
    gradleVersion = '1.8'
}
//
//task copyNativeLibs(type: Copy) {
//    from fileTree(dir: 'thirdparty/tess-two/eyes-two/libs', include: '**/*.so' )  into  'build/native-libs'
//    from fileTree(dir: 'thirdparty/tess-two/tess-two/libs', include: '**/*.so' )  into  'build/native-libs'
//}
//tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNativeLibs }
//
//clean.dependsOn 'cleanCopyNativeLibs'
//
//tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
//  pkgTask.jniDir new File('build/native-libs')
//}
